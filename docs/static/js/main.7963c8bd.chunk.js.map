{"version":3,"sources":["index.jsx"],"names":["bigdata","headers","nToGen","rows","_loop","index","row","forEach","header","Math","random","concat","Object","C_Users_untra_Documents_naivetable_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__","blamDataRows","App","props","_this","C_Users_untra_Documents_naivetable_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_untra_Documents_naivetable_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_untra_Documents_naivetable_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_untra_naivetable__WEBPACK_IMPORTED_MODULE_8__","data","includeIndex","React","Component","render","document","getElementById"],"mappings":"gNAkBMA,EAZe,SAACC,EAASC,GAE3B,IADA,IAAIC,EAAO,GAD2BC,EAAA,SAE7BC,GACL,IAAMC,EAAM,GACZL,EAAQM,QAAQ,SAAAC,GACZF,EAAIE,GAAUC,KAAKC,WAEvBP,EAAI,GAAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAOT,GAAP,CAAaG,KALZD,EAAQ,EAAGA,EAAQH,EAAQG,IAASD,IAO7C,OAAOD,EAGKW,CAAa,CAAC,MAAO,MAAO,OAAQ,KAE9CC,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAJ,IACfE,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAG,GAAAO,KAAAH,KAAMH,KACDO,MAAQ,GAFEN,wEAMf,OAAOO,EAAAC,EAAAC,cAACC,EAAD,CAAYC,KACf5B,EAEJ6B,cACI,EAEJ5B,QACI,YAdM6B,IAAMC,WAoBxBC,iBAAQR,EAAAC,EAAAC,cAACX,EAAD,MAAUkB,SAASC,eAAe","file":"static/js/main.7963c8bd.chunk.js","sourcesContent":["import React from 'react'\nimport {\n    render\n} from 'react-dom'\nimport * as NaiveTable from '@untra/naivetable'\n\nconst blamDataRows = (headers, nToGen) => {\n    let rows = []\n    for (let index = 0; index < nToGen; index++) {\n        const row = {}\n        headers.forEach(header => {\n            row[header] = Math.random()\n        })\n        rows = [...rows, row]\n    }\n    return rows\n}\n\nconst bigdata = blamDataRows(['foo', 'bar', 'baz'], 500)\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        return <NaiveTable data = {\n            bigdata\n        }\n        includeIndex = {\n            true\n        }\n        headers = {\n            []\n        }\n        />\n    }\n}\n\nrender( <App /> , document.getElementById('root'))"],"sourceRoot":""}